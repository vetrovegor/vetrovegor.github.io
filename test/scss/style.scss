// &display=swap

@mixin adaptive-width($columns, $gap) {
    width: calc(
        100% / #{$columns} - (#{$columns} - 1) * #{$gap + px} / #{$columns}
    );
}

@mixin adaptive-value(
    $property,
    $maxValue,
    $minValue,
    $minWidth: 320,
    $maxWidth: $container + $safety * 2
) {
    $widthDiff: $maxWidth - $minWidth;
    $valueDiff: $maxValue - $minValue;
    $step: $valueDiff / $widthDiff;

    #{$property}: #{$maxValue + px};

    @media (max-width:#{$maxWidth+px}) {
        #{$property}: calc(
            #{$maxValue+px} - (#{$step * $maxWidth+px} - #{$step * 100 + vw})
        );
    }

    @media (max-width:#{$minWidth+px}) {
        #{$property}: #{$minValue + px};
    }
}

:root {
    --mainColor: #007cee;
}

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

a {
    text-decoration: none;
    color: inherit;
    transition: 0.3s;
}

@media (any-hover: hover) {
    a:hover {
        opacity: 0.75;
    }
}

svg {
    flex-shrink: 0;
}

ul,
ol,
li {
    list-style: none;
}

body {
    font-family: sans-serif;
    font-size: 16px;
    font-weight: 400;
    line-height: 1;

    &.lock {
        overflow: hidden;
    }
}

input,
button,
textarea {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    border: 0;
    outline: 0;
}

textarea {
    resize: none;
}

input::placeholder,
textarea::placeholder {
    color: inherit;
}

button {
    cursor: pointer;
    background-color: transparent;
    transition: 0.3s;
}

@media (any-hover: hover) {
    button:hover {
        opacity: 0.75;
    }
}

.wrapper {
    display: flex;
    flex-direction: column;
    overflow: hidden;
    min-height: 100vh;
}

.main {
    flex-grow: 1;
}

$container: 1100;
$safety: 20;

.container {
    width: 100%;
    max-width: #{$container + 2 * $safety}px;
    padding: 0 #{$safety + px};
    margin: 0 auto;
}

.ibg {
    position: relative;

    > img {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        object-fit: cover;
    }
}

.video {
    width: 100%;
    position: relative;
    padding-bottom: 56.25%;

    iframe {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }
}

.text {
    line-height: normal;
}

.item {
    display: flex;
    align-items: center;
    gap: 5px;
}

.dim {
    opacity: 0.5;
}

.main-color {
    color: var(--mainColor);
}

.bold {
    font-weight: 700;
}

@import 'menu';
@import 'popup';

.grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-auto-rows: 100px; /* высота маленького блока */
  gap: 10px;
}

/* --- Паттерн каждые 6 элементов --- */

/* 1. Большой слева (1-й, 7-й, 13-й...) */
.grid > div:nth-child(6n + 1) {
  grid-column: 1;
  grid-row: span 2;
  background: #999;
}

/* 2. и 3. Маленькие справа */
.grid > div:nth-child(6n + 2) { grid-column: 2; grid-row: auto; }
.grid > div:nth-child(6n + 3) { grid-column: 2; grid-row: auto; }

/* 4. Маленький слева */
.grid > div:nth-child(6n + 4) { grid-column: 1; grid-row: auto; }

/* 5. Маленький слева */
.grid > div:nth-child(6n + 5) { grid-column: 1; grid-row: auto; }

/* 6. Большой справа (6-й, 12-й, 18-й...) */
.grid > div:nth-child(6n + 6) {
  grid-column: 2;
  grid-row: span 2;
  background: #999;
}

/* --- Красивый фон и центрирование текста --- */
.grid > div {
  background: #ccc;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
}
